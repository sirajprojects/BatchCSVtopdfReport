package batch.com.csvtopdfgenerater.writer;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType1Font;

import batch.com.csvtopdfgenerater.entity.PatientReport;

public class ReportTemplate {

    private static final float MARGIN = 50;
    private static final float LEADING = 1.5f * 12; // Line height

    public void generatePdf(List<? extends PatientReport> items, String outputPath) throws IOException {
        try (PDDocument document = new PDDocument()) {
            for (PatientReport report : items) {
                PDPage page = new PDPage(PDRectangle.A4);
                document.addPage(page);

                try (PDPageContentStream contentStream = new PDPageContentStream(document, page)) {
                    addTitlePage(contentStream);
                    addReportToDocument(contentStream, report);
                }
            }

            document.save(outputPath);
        }
    }

    private void addTitlePage(PDPageContentStream contentStream) throws IOException {
        float y = PDRectangle.A4.getHeight() - MARGIN;
        
        contentStream.setFont(PDType1Font.TIMES_BOLD, 16);
        contentStream.beginText();
        contentStream.newLineAtOffset(MARGIN, y);
        contentStream.showText("Pathologist's Report");
        contentStream.endText();

        y -= LEADING;
        contentStream.setFont(PDType1Font.TIMES_ITALIC, 14);
        contentStream.beginText();
        contentStream.newLineAtOffset(MARGIN, y);
        contentStream.showText("Generated by XYZ Lab");
        contentStream.endText();

        y -= LEADING;
        contentStream.setFont(PDType1Font.TIMES_ROMAN, 12);
        contentStream.beginText();
        contentStream.newLineAtOffset(MARGIN, y);
        contentStream.showText(new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
        contentStream.endText();
    }

    private void addReportToDocument(PDPageContentStream contentStream, PatientReport report) throws IOException {
        float y = PDRectangle.A4.getHeight() - MARGIN - (3 * LEADING);

        // Adding timestamp
        y -= LEADING;
        addText(contentStream, "Generated on: " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()), y);

        y -= LEADING;
        addText(contentStream, "Patient Information", y);
        y -= LEADING;
        addText(contentStream, "Patient ID: " + report.getPatientId(), y);
        y -= LEADING;
        addText(contentStream, "Patient Name: " + report.getPatientName(), y);
        y -= LEADING;
        addText(contentStream, "Date of Birth: " + report.getDateOfBirth(), y);
        y -= LEADING;
        addText(contentStream, "Gender: " + report.getGender(), y);

        y -= LEADING;
        addText(contentStream, "Report Details", y);
        y -= LEADING;
        addText(contentStream, "Report ID: " + report.getReportId(), y);
        y -= LEADING;
        addText(contentStream, "Date of Report: " + report.getDateOfReport(), y);
        y -= LEADING;
        addText(contentStream, "Specimen Type: " + report.getSpecimenType(), y);
        y -= LEADING;
        addText(contentStream, "Specimen Collection Date: " + report.getSpecimenCollectionDate(), y);

        y -= LEADING;
        addText(contentStream, "Diagnosis", y);
        y -= LEADING;
        addText(contentStream, report.getDiagnosis(), y);

        y -= LEADING;
        addText(contentStream, "Microscopic Description", y);
        y -= LEADING;
        addText(contentStream, report.getMicroscopicDescription(), y);

        y -= LEADING;
        addText(contentStream, "Pathologist Information", y);
        y -= LEADING;
        addText(contentStream, "Pathologist Name: " + report.getPathologistName(), y);

        y -= LEADING;
        addText(contentStream, "Comments", y);
        y -= LEADING;
        addText(contentStream, report.getComments(), y);
    }

    private void addText(PDPageContentStream contentStream, String text, float y) throws IOException {
        contentStream.setFont(PDType1Font.TIMES_ROMAN, 12);
        contentStream.beginText();
        contentStream.newLineAtOffset(MARGIN, y);
        contentStream.showText(text);
        contentStream.endText();
    }
}
